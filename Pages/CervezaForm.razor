@page "/cervezaform"
@page "/cervezaform/{Id:int}"
@using System.Net.Http
@using System.Net.Http.Json
@using BlazorCrud.Data
@inject HttpClient Http
@inject NavigationManager navigationManager



<h3>CervezaForm</h3>

<EditForm Model="oCerveza">
    <div class="container-fluid">
        <div class="form-group row mob-1">
            <div class="col-sm-1">
                <label>Nombre</label>
            </div>
            
            <div class="col-sm-11">
                <InputText class="form-control" @bind-Value="oCerveza.Nombre" />
            </div>
        </div>
        <div class="form-group row mob-1">
            <div class="col-sm-1">
                <label>Marca</label>
            </div>
            <div class="col-sm-11">
                <InputText class="form-control" @bind-Value="oCerveza.Marca" />
            </div>
        </div>
        <div class="form-group row mob-1">
            <div class="col-sm-9">
                <button class="btn btn-primary" @onclick="Save">Guardar</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    Cerveza oCerveza = new Cerveza();
    Respuesta oRespuesta = new Respuesta();
    
    public string Url = "/api/Cerveza";

    private async Task Save()
    {

        if(Id!=0)
        {
            var response = await Http.PutAsJsonAsync<Cerveza>(Url, oCerveza);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta>().Result;
        }
        else
        {
            var response = await Http.PostAsJsonAsync<Cerveza>(Url, oCerveza);
            oRespuesta = response.Content.ReadFromJsonAsync<Respuesta>().Result;
        }

        navigationManager.NavigateTo("/cervezas");
    }

    protected override async Task OnInitializedAsync()
    {
        if(Id !=0)
        {
            oCerveza = await Http.GetFromJsonAsync<Cerveza>(Url + "/" + Id);
            
        }
    }

}
